#!/bin/bash

set -euo pipefail

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
if [[ ! -t 0 ]] && [[ ! -c /dev/tty ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –°–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–≤–æ–¥–∞"
    echo ""
    echo "üîß –†–µ—à–µ–Ω–∏–µ:"
    echo "1. –°–∫–∞—á–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –ª–æ–∫–∞–ª—å–Ω–æ:"
    echo "   wget https://raw.githubusercontent.com/boochamoocha/proxmox-scripts/main/mount-remote-folder-to-lxc/mount-remote-folder-to-lxc.sh"
    echo ""
    echo "2. –°–¥–µ–ª–∞–π—Ç–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    echo "   chmod +x mount-remote-folder-to-lxc.sh"
    echo "   ./mount-remote-folder-to-lxc.sh"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è —Å TTY
safe_read() {
    if [[ -t 0 ]]; then
        read "$@"
    else
        read "$@" < /dev/tty
    fi
}

# –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—É—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
validate_input() {
    local input="$1"
    local field_name="$2"
    if [[ -z "$input" ]]; then
        echo "‚ùå –û—à–∏–±–∫–∞: $field_name –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–±–µ–ª–æ–≤
trim_input() {
    local input="$1"
    echo "$input" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
check_container_exists() {
    local ctid="$1"
    if ! pct status "$ctid" >/dev/null 2>&1; then
        echo "‚ùå –û—à–∏–±–∫–∞: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $ctid –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        exit 1
    fi
}

echo "=== üß© –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Proxmox LXC ==="

# –í–≤–æ–¥ ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
while true; do
    safe_read -p "–í–≤–µ–¥–∏—Ç–µ ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: " CTID
    validate_input "$CTID" "ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    if [[ "$CTID" =~ ^[0-9]+$ ]]; then
        check_container_exists "$CTID"
        break
    else
        echo "‚ùå ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º"
    fi
done

# –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã
echo ""
echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:"
echo "1) host-managed (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π) - –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ö–æ—Å—Ç–µ + bind mount"
echo "2) container-direct - –ø—Ä—è–º–æ–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
while true; do
    safe_read -p "–†–µ–∂–∏–º (1-2): " MODE_CHOICE
    case "$MODE_CHOICE" in
        1)
            MODE="host-managed"
            break
            ;;
        2)
            MODE="container-direct"
            break
            ;;
        *)
            echo "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ 1 –∏–ª–∏ 2"
            ;;
    esac
done

# –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö
echo ""
echo "üí° –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö:"
echo "1) nfs - —Å–µ—Ç–µ–≤–∞—è NFS —à–∞—Ä–∞ (–±—É–¥–µ—Ç —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ —Ö–æ—Å—Ç–µ)"
echo "2) cifs - —Å–µ—Ç–µ–≤–∞—è CIFS/SMB —à–∞—Ä–∞ (–±—É–¥–µ—Ç —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ —Ö–æ—Å—Ç–µ + —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)"
echo "3) mounted - —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–∞ —Ö–æ—Å—Ç–µ (–ø—Ä—è–º–æ–π bind mount)"
while true; do
    safe_read -p "–¢–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (1-3): " SHARE_TYPE_CHOICE
    SHARE_TYPE_CHOICE=$(trim_input "$SHARE_TYPE_CHOICE")
    case "$SHARE_TYPE_CHOICE" in
        1)
            SHARE_TYPE="nfs"
            break
            ;;
        2)
            SHARE_TYPE="cifs"
            break
            ;;
        3)
            SHARE_TYPE="mounted"
            break
            ;;
        *)
            echo "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ 1, 2 –∏–ª–∏ 3"
            ;;
    esac
done

# –í–≤–æ–¥ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
case "$SHARE_TYPE" in
  nfs)
    echo "üìå –ü—Ä–∏–º–µ—Ä –∞–¥—Ä–µ—Å–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ NFS: 192.168.1.10:/media/nfs"
    while true; do
        safe_read -p "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞ NFS: " RAW_SHARE_SRC
        validate_input "$RAW_SHARE_SRC" "–ê–¥—Ä–µ—Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞ NFS"
        SHARE_SRC="$RAW_SHARE_SRC"
        break
    done
    ;;
  cifs)
    echo "üìå –ü—Ä–∏–º–µ—Ä –∞–¥—Ä–µ—Å–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ CIFS: 192.168.1.10/Movies"
    while true; do
        safe_read -p "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞ CIFS (–±–µ–∑ //): " RAW_SHARE_SRC
        validate_input "$RAW_SHARE_SRC" "–ê–¥—Ä–µ—Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞ CIFS"
        if [[ "$RAW_SHARE_SRC" != //* ]]; then
            SHARE_SRC="//${RAW_SHARE_SRC}"
        else
            SHARE_SRC="$RAW_SHARE_SRC"
        fi
        break
    done
    ;;
  mounted)
    echo "üìå –ü—Ä–∏–º–µ—Ä —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: /mnt/dsm/data"
    while true; do
        safe_read -p "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Ö–æ—Å—Ç–µ: " SHARE_SRC
        validate_input "$SHARE_SRC" "–ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Ö–æ—Å—Ç–µ"
        if [[ ! -d "$SHARE_SRC" ]]; then
            echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $SHARE_SRC –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        else
            break
        fi
    done
    ;;
esac

# –í–≤–æ–¥ –ø—É—Ç–∏ –Ω–∞ —Ö–æ—Å—Ç–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è NFS/CIFS –≤ host-managed —Ä–µ–∂–∏–º–µ)
if [[ "$MODE" == "host-managed" && "$SHARE_TYPE" != "mounted" ]]; then
    while true; do
        safe_read -p "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Ö–æ—Å—Ç–µ Proxmox (–Ω–∞–ø—Ä–∏–º–µ—Ä, /mnt/share): " HOST_MOUNT
        validate_input "$HOST_MOUNT" "–ü—É—Ç—å –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Ö–æ—Å—Ç–µ"
        break
    done
fi

# –í–≤–æ–¥ –ø—É—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
while true; do
    safe_read -p "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, /mnt/media): " CT_MOUNT
    validate_input "$CT_MOUNT" "–ü—É—Ç—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    break
done

# –í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞
echo ""
echo "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:"
echo "1) Read-Write (rw) - —á—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å"
echo "2) Read-Only (ro) - —Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ"
while true; do
    safe_read -p "–î–æ—Å—Ç—É–ø (1-2): " ACCESS_CHOICE
    case "$ACCESS_CHOICE" in
        1)
            ACCESS_MODE="rw"
            RO_PARAM=""
            break
            ;;
        2)
            ACCESS_MODE="ro"
            RO_PARAM=",ro=1"
            break
            ;;
        *)
            echo "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ 1 –∏–ª–∏ 2"
            ;;
    esac
done

# –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è CIFS (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)
if [[ "$SHARE_TYPE" == "cifs" ]]; then
    while true; do
        safe_read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è CIFS: " CIFS_USER
        validate_input "$CIFS_USER" "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è CIFS"
        break
    done
    while true; do
        safe_read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å CIFS: " CIFS_PASS
        echo
        validate_input "$CIFS_PASS" "–ü–∞—Ä–æ–ª—å CIFS"
        break
    done
fi

echo ""
echo "=== üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ==="

# === HOST-MANAGED –†–ï–ñ–ò–ú ===
if [[ "$MODE" == "host-managed" ]]; then
    echo "üìã –†–µ–∂–∏–º: Host-managed"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –Ω–∞ —Ö–æ—Å—Ç–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–µ—Ç–µ–≤—ã—Ö —à–∞—Ä)
    if [[ "$SHARE_TYPE" != "mounted" ]]; then
        echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Ö–æ—Å—Ç–µ: $HOST_MOUNT"
        mkdir -p "$HOST_MOUNT"
    fi

    # –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ö–æ—Å—Ç–µ (–¥–ª—è network shares)
    if [[ "$SHARE_TYPE" != "mounted" ]]; then
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        if [[ "$SHARE_TYPE" == "nfs" ]]; then
            apt-get update -qq && apt-get install -y nfs-common
            echo "üîó –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NFS –Ω–∞ —Ö–æ—Å—Ç–µ..."
            mount -t nfs "$SHARE_SRC" "$HOST_MOUNT"
        elif [[ "$SHARE_TYPE" == "cifs" ]]; then
            apt-get update -qq && apt-get install -y cifs-utils
            echo "üîó –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CIFS –Ω–∞ —Ö–æ—Å—Ç–µ..."
            mount -t cifs "$SHARE_SRC" "$HOST_MOUNT" -o username="$CIFS_USER",password="$CIFS_PASS",vers=3.0
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if mount | grep -q "$HOST_MOUNT"; then
            echo "‚úÖ –°–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ –Ω–∞ —Ö–æ—Å—Ç–µ: $HOST_MOUNT"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Ö–æ—Å—Ç–µ. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:"
            dmesg | tail -n 10
            exit 1
        fi
    else
        # –î–ª—è mounted - –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        HOST_MOUNT="$SHARE_SRC"
        echo "üìÇ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $HOST_MOUNT"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è mounted —Ç–∏–ø–∞ (–µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ —Ä–∞–Ω–µ–µ)
        if [[ -z "$CONTAINER_TYPE" ]]; then
            CONTAINER_TYPE=$(get_container_type "$CTID")
            echo "üîç –¢–∏–ø –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $CONTAINER_TYPE"
            
            # –î–ª—è —Ç–∏–ø–∞ mounted –∏—Å–ø–æ–ª—å–∑—É–µ–º auto —Ä–µ–∂–∏–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            LXC_COMPAT_MODE=${LXC_COMPAT_MODE:-"auto"}
            
            if [[ "$LXC_COMPAT_MODE" == "auto" ]]; then
                LXC_MAPPING=$(get_lxc_mapping "$CTID")
                echo "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω mapping: UID:GID = $LXC_MAPPING"
            elif [[ "$LXC_COMPAT_MODE" == "manual" ]]; then
                LXC_MAPPING="$MANUAL_UID:$MANUAL_GID"
                echo "üîß –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–π mapping: UID:GID = $LXC_MAPPING"
            else
                LXC_MAPPING="0:0"
                echo "‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ mapping –ø—Ä–æ–ø—É—â–µ–Ω–∞"
            fi
        fi
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π (–µ—Å–ª–∏ –Ω–µ skip)
        if [[ "$LXC_COMPAT_MODE" != "skip" && "$CONTAINER_TYPE" == "unprivileged" ]]; then
            echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
            setup_lxc_permissions "$HOST_MOUNT" "$LXC_MAPPING" "$ACCESS_MODE"
        fi
    fi

    # === –ù–∞–π–¥—ë–º —Å–≤–æ–±–æ–¥–Ω—ã–π mpX ===
    CONF_PATH="/etc/pve/lxc/$CTID.conf"
    MP_INDEX=""
    for i in $(seq 0 31); do
        MP_TEST="mp$i"
        if ! grep -q "^$MP_TEST:" "$CONF_PATH"; then
            MP_INDEX="$MP_TEST"
            echo "üìé –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω –∏–Ω–¥–µ–∫—Å —Ç–æ—á–∫–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: $MP_INDEX"
            break
        fi
    done

    if [[ -z "$MP_INDEX" ]]; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–≤–æ–±–æ–¥–Ω—ã–π mpX (–≤—Å–µ mp0..mp31 –∑–∞–Ω—è—Ç—ã)"
        exit 1
    fi

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥ LXC
    if grep -q "$CT_MOUNT" "$CONF_PATH"; then
        echo "‚ö†Ô∏è –¢–æ—á–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–Ω—Ñ–∏–≥–µ"
    else
        echo "$MP_INDEX: $HOST_MOUNT,mp=$CT_MOUNT$RO_PARAM" >> "$CONF_PATH"
        echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é LXC: $CONF_PATH"
    fi

# === CONTAINER-DIRECT –†–ï–ñ–ò–ú ===
elif [[ "$MODE" == "container-direct" ]]; then
    echo "üìã –†–µ–∂–∏–º: Container-direct"
    
    if [[ "$SHARE_TYPE" == "mounted" ]]; then
        echo "‚ùå Container-direct —Ä–µ–∂–∏–º –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è —É–∂–µ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"
        echo "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ö–æ—Å—Ç–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ host-managed —Ä–µ–∂–∏–º"
        exit 1
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    if [[ "$SHARE_TYPE" == "nfs" ]]; then
        pct exec "$CTID" -- bash -c "apt-get update -qq && apt-get install -y nfs-common"
    elif [[ "$SHARE_TYPE" == "cifs" ]]; then
        pct exec "$CTID" -- bash -c "apt-get update -qq && apt-get install -y cifs-utils"
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ: $CT_MOUNT"
    pct exec "$CTID" -- mkdir -p "$CT_MOUNT"

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ /etc/fstab –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    echo "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
    
    if [[ "$SHARE_TYPE" == "nfs" ]]; then
        FSTAB_ENTRY="$SHARE_SRC $CT_MOUNT nfs defaults,_netdev"
        if [[ "$ACCESS_MODE" == "ro" ]]; then
            FSTAB_ENTRY="$FSTAB_ENTRY,ro"
        fi
        FSTAB_ENTRY="$FSTAB_ENTRY 0 0"
    elif [[ "$SHARE_TYPE" == "cifs" ]]; then
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        CREDS_FILE="/etc/cifs-credentials"
        pct exec "$CTID" -- bash -c "echo 'username=$CIFS_USER' > $CREDS_FILE"
        pct exec "$CTID" -- bash -c "echo 'password=$CIFS_PASS' >> $CREDS_FILE"
        pct exec "$CTID" -- chmod 600 "$CREDS_FILE"
        
        FSTAB_ENTRY="$SHARE_SRC $CT_MOUNT cifs credentials=$CREDS_FILE,vers=3.0,_netdev"
        if [[ "$ACCESS_MODE" == "ro" ]]; then
            FSTAB_ENTRY="$FSTAB_ENTRY,ro"
        fi
        FSTAB_ENTRY="$FSTAB_ENTRY 0 0"
    fi

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ fstab, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
    if pct exec "$CTID" -- grep -q "$CT_MOUNT" /etc/fstab; then
        echo "‚ö†Ô∏è –ó–∞–ø–∏—Å—å –≤ fstab —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        pct exec "$CTID" -- bash -c "echo '$FSTAB_ENTRY' >> /etc/fstab"
        echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å –≤ /etc/fstab –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    fi

    # –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    echo "üîó –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
    if pct exec "$CTID" -- mount "$CT_MOUNT"; then
        echo "‚úÖ –°–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
        exit 1
    fi
fi

# === –û–ë–©–ò–ï –§–ò–ù–ê–õ–¨–ù–´–ï –®–ê–ì–ò ===

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–µ—Å–ª–∏ –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω)
echo "üìÅ –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∫–∞—Ç–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ: $CT_MOUNT"
pct exec "$CTID" -- mkdir -p "$CT_MOUNT"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [[ "$MODE" == "host-managed" ]]; then
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è bind mount..."
    pct reboot "$CTID"
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    sleep 5
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    while ! pct status "$CTID" | grep -q "running"; do
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
        sleep 2
    done
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
echo ""
echo "=== ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ==="
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."

if pct exec "$CTID" -- test -d "$CT_MOUNT"; then
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $CT_MOUNT —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è host-managed —Ä–µ–∂–∏–º–∞
    if [[ "$MODE" == "host-managed" ]]; then
        if test_write_permissions "$CTID" "$CT_MOUNT" "$ACCESS_MODE"; then
            WRITE_TEST_STATUS="‚úÖ —É—Å–ø–µ—à–Ω–æ"
        else
            WRITE_TEST_STATUS="‚ùå –æ—à–∏–±–∫–∞"
        fi
    fi
    
    echo ""
    echo "üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ $CT_MOUNT –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
    if pct exec "$CTID" -- ls -la "$CT_MOUNT" 2>/dev/null; then
        echo ""
        if [[ "$WRITE_TEST_STATUS" == "‚úÖ —É—Å–ø–µ—à–Ω–æ" ]]; then
            echo "‚úÖ –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
        else
            echo "‚ö†Ô∏è –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞"
        fi
        
        echo ""
        echo "üìã –°–≤–æ–¥–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
        echo "   –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: $CTID ($CONTAINER_TYPE)"
        echo "   –†–µ–∂–∏–º: $MODE"
        echo "   –¢–∏–ø: $SHARE_TYPE"
        if [[ "$SHARE_TYPE" != "mounted" ]]; then
            echo "   –ò—Å—Ç–æ—á–Ω–∏–∫: $SHARE_SRC"
        else
            echo "   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ö–æ—Å—Ç–∞: $SHARE_SRC"
        fi
        echo "   –ü—É—Ç—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ: $CT_MOUNT"
        echo "   –î–æ—Å—Ç—É–ø: $ACCESS_MODE"
        if [[ "$MODE" == "host-managed" ]]; then
            echo "   LXC mapping: $LXC_MAPPING (—Ä–µ–∂–∏–º: $LXC_COMPAT_MODE)"
            if [[ "$SHARE_TYPE" != "mounted" ]]; then
                echo "   –ü—É—Ç—å –Ω–∞ —Ö–æ—Å—Ç–µ: $HOST_MOUNT"
            fi
            if [[ -n "$WRITE_TEST_STATUS" ]]; then
                echo "   –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏: $WRITE_TEST_STATUS"
            fi
        fi
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö
        if [[ "$WRITE_TEST_STATUS" == "‚ùå –æ—à–∏–±–∫–∞" ]]; then
            echo ""
            echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–∞–≤–∞–º–∏:"
            echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ —Å–µ—Ç–µ–≤–æ–π —à–∞—Ä–µ"
            echo "   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω—É–∂–Ω—ã–µ UID/GID"
            echo "   3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å —Ä–µ–∂–∏–º–æ–º 'manual' –∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ UID/GID"
        fi
    else
        echo "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        echo "–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–æ–≤–æ–π/–ø—É—Å—Ç–æ–π —à–∞—Ä—ã"
    fi
else
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $CT_MOUNT –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    exit 1
fi
